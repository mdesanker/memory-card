{"version":3,"sources":["components/Footer.js","components/Header.js","components/game/CardWrapper.js","components/game/Cards.js","components/game/Scoreboard.js","components/Backdrop.js","components/Main.js","themes/GlobalStyles.js","App.js","index.js"],"names":["FooterContainer","styled","footer","Footer","Letters","div","Element","Title","h1","HeaderContainer","header","Header","CardWrapper","CardContainer","props","img","Label","label","Cards","content","charList","map","char","id","char_id","onClick","onClickHandler","name","ScoreboardContainer","Score","Scoreboard","current","high","Modal","ModalContainer","Button","onModalClick","Overlay","button","Backdrop","Fragment","ReactDOM","createPortal","onGameOverClick","document","querySelector","MainContainer","main","Main","useState","characters","setCharacters","guesses","setGuesses","currentScore","setCurrentScore","highScore","setHighScore","isWon","setIsWon","fetchChars","a","fetch","response","json","chars","filter","_","index","indices","getRandomIndices","selection","val","console","error","message","arr","numEl","randIndices","length","num","Math","floor","random","includes","push","shuffleArray","newArr","useEffect","e","target","prevState","GlobalStyle","createGlobalStyle","App","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.57bdc41b.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Footer = () => {\n  return <FooterContainer>Copyright Â© 2021 mdesanker</FooterContainer>;\n};\n\nconst FooterContainer = styled.footer`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5rem;\n\n  background-color: rgb(52, 52, 52);\n  color: white;\n  letter-spacing: 0.1rem;\n`;\n\nexport default Footer;\n","import styled from \"styled-components\";\n\nconst Header = () => {\n  return (\n    <HeaderContainer>\n      <Title>\n        {/* <Element>\n          <h2>90</h2>\n          <h1>Th</h1>\n          <p>Thalium</p>\n        </Element>\n        <Letters>e&nbsp;&nbsp;</Letters> */}\n        <Letters>Me</Letters>\n        <Element>\n          <h2>42</h2>\n          <h1>Mo</h1>\n          <p>Molybdenum</p>\n        </Element>\n        <Letters>ry&nbsp;&nbsp;&nbsp;</Letters>\n        <Element>\n          <h2>31</h2>\n          <h1>Ga</h1>\n          <p>Gallium</p>\n        </Element>\n        <Letters>me</Letters>\n      </Title>\n    </HeaderContainer>\n  );\n};\n\nconst Letters = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  height: 6rem;\n  text-align: center;\n  padding: 0rem 0.2rem 0.6rem;\n`;\n\nconst Element = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  border: 1px solid white;\n  width: 4rem;\n  height: 5rem;\n  text-align: center;\n\n  & h1 {\n    font-size: 2rem;\n    text-align: center;\n    padding: 0;\n    margin: 0;\n  }\n\n  & h2 {\n    font-size: 1rem;\n    text-align: center;\n    padding: 0;\n    margin: 0;\n  }\n\n  & p {\n    font-size: 0.6rem;\n    font-weight: 100;\n    text-align: center;\n    padding: 0;\n    margin: 0;\n  }\n`;\n\nconst Title = styled.h1`\n  display: flex;\n  // flex-direction: row;\n  // align-items: center;\n`;\n\nconst HeaderContainer = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.5rem 5rem;\n  color: white;\n  background-color: #264653;\n`;\n\nexport default Header;\n","import styled from \"styled-components\";\n\nconst CardWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n\n  width: 800px;\n  height: auto;\n  margin: 10px 0 40px;\n`;\n\nexport default CardWrapper;\n","import styled from \"styled-components\";\nimport CardWrapper from \"./CardWrapper\";\n\nconst Cards = (props) => {\n  const content = props.charList.map((char) => {\n    return (\n      <CardContainer\n        id={char.char_id}\n        key={char.char_id}\n        img={char.img}\n        onClick={props.onClickHandler}\n      >\n        <Label>{char.name}</Label>\n      </CardContainer>\n    );\n  });\n\n  return <CardWrapper>{content}</CardWrapper>;\n};\n\nconst CardContainer = styled.div`\n  width: 180px;\n  height: 210px;\n  margin: 10px;\n  border: none;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n\n  background-image: url(${(props) => (props.img ? props.img : \"\")});\n  background-size: cover;\n  background-position: top;\n\n  transition: 200ms all;\n\n  &:hover {\n    background-image: linear-gradient(\n        rgba(255, 255, 255, 0.1),\n        rgba(255, 255, 255, 0.1)\n      ),\n      url(${(props) => (props.img ? props.img : \"\")});\n    transform: scale(1.03);\n  }\n`;\n\nconst Label = styled.label`\n  text-align: center;\n  margin: 0.5rem 0.5rem 0;\n  color: white;\n  font-weight: 700;\n  background-color: rgba(0, 0, 0, 0.2);\n`;\n\nexport default Cards;\n","import styled from \"styled-components\";\n\nconst Scoreboard = (props) => {\n  return (\n    <ScoreboardContainer>\n      <Score>Current Score: {props.current}</Score>\n      <Score>High Score: {props.high}</Score>\n    </ScoreboardContainer>\n  );\n};\n\nconst ScoreboardContainer = styled.div`\n  width: 800px;\n  display: flex;\n  justify-content: space-evenly;\n  font-weight: 700;\n`;\n\nconst Score = styled.div`\n  border: 2px solid black;\n  font-size: 1rem;\n  padding: 0.5rem 2rem;\n  margin-top: 1rem;\n`;\n\nexport default Scoreboard;\n","import styled from \"styled-components\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\n\nconst Backdrop = (props) => {\n  return (\n    <React.Fragment>\n      {ReactDOM.createPortal(\n        <Modal onModalClick={props.onGameOverClick} />,\n        document.querySelector(\"#modal-root\")\n      )}\n      {ReactDOM.createPortal(\n        <Overlay />,\n        document.querySelector(\"#overlay-root\")\n      )}\n    </React.Fragment>\n  );\n};\n\nconst Modal = (props) => {\n  return (\n    <ModalContainer>\n      <h1>You won!</h1>\n      <p>Click replay to play again with a random selection of characters</p>\n      <Button onClick={props.onModalClick}>Replay</Button>\n    </ModalContainer>\n  );\n};\n\nconst ModalContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  width: 400px;\n  height: 250px;\n  background-color: white;\n  border-top: 7px solid #005f73;\n  z-index: 100;\n  padding: 1rem;\n\n  & h1,\n  & p {\n    text-align: center;\n  }\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 10;\n  background-color: rgba(0, 0, 0, 0.5);\n  backdrop-filter: blur(4px);\n`;\n\nconst Button = styled.button`\n  font-size: 1rem;\n  font-weight: 700;\n  padding: 0.5rem 2rem;\n  color: #005f73;\n  background-color: transparent;\n  border: 3px solid #005f73;\n  border-radius: 5px;\n  transition: 200ms all;\n\n  &:hover {\n    color: white;\n    background-color: #005f73;\n  }\n`;\n\nexport default Backdrop;\n","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Cards from \"./game/Cards\";\nimport Scoreboard from \"./game/Scoreboard\";\nimport Backdrop from \"./Backdrop\";\n\nconst Main = () => {\n  // States\n  const [characters, setCharacters] = useState([]);\n  const [guesses, setGuesses] = useState([]);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [isWon, setIsWon] = useState(false);\n\n  // Functions\n  async function fetchChars() {\n    try {\n      const response = await fetch(\n        \"https://www.breakingbadapi.com/api/characters\"\n      );\n      const json = await response.json();\n\n      // Filter out Holly White - no img in API, and Salamanca twins - weird img\n      const chars = json.filter((_, index) => index !== 38 && index !== 12);\n\n      // Downselect to 12 random characters\n      const indices = getRandomIndices(chars, 12);\n      const selection = indices.map((val) => chars[val]);\n      setCharacters(selection);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  const getRandomIndices = (arr, numEl) => {\n    const randIndices = [];\n    while (randIndices.length < numEl) {\n      const num = Math.floor(Math.random() * arr.length);\n      if (!randIndices.includes(num)) randIndices.push(num);\n    }\n    return randIndices;\n  };\n\n  // Handle clicks on card components\n  const clickHandler = (e) => {\n    const { id } = e.target;\n    // Handle correct guess\n    if (!guesses.includes(id)) {\n      setGuesses((prevState) => [...prevState, id]);\n      setCurrentScore((prevState) => prevState + 1);\n\n      //Handle incorrect guess\n    } else {\n      setCurrentScore(0);\n      setGuesses([]);\n    }\n\n    // Shuffle board after each guess\n    setCharacters(shuffleArray(characters));\n  };\n\n  const shuffleArray = (arr) => {\n    const newArr = [];\n    const indices = [];\n    while (newArr.length !== arr.length) {\n      const index = Math.floor(Math.random() * arr.length);\n      if (!indices.includes(index)) {\n        indices.push(index);\n        newArr.push(arr[index]);\n      }\n    }\n    return newArr;\n  };\n\n  const gameOverClickHandler = () => {\n    setIsWon(false);\n    setCharacters([]);\n    fetchChars();\n    setCurrentScore(0);\n    setGuesses([]);\n  };\n\n  // useEffect Hooks\n  // Fetch character API data on load\n  useEffect(() => {\n    fetchChars();\n  }, []);\n\n  useEffect(() => {\n    if (guesses.length >= 12) setIsWon(true);\n  }, [guesses]);\n\n  // Set high score\n  useEffect(() => {\n    currentScore > highScore && setHighScore(currentScore);\n  }, [currentScore, highScore]);\n\n  // Render\n  return (\n    <MainContainer>\n      <Scoreboard current={currentScore} high={highScore} />\n      <Cards charList={characters} onClickHandler={clickHandler} />\n      {isWon && <Backdrop onGameOverClick={gameOverClickHandler} />}\n    </MainContainer>\n  );\n};\n\nconst MainContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n`;\n\nexport default Main;\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n  }\n\n  html{\n    font-size: 18px;\n    /* Footer support */\n    position: relative;\n    min-height: 100vh;\n  }\n\n  body {\n    font-family: arial, sans-serif;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n\nexport default GlobalStyle;\n","import React, { Fragment } from \"react\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport GlobalStyle from \"./themes/GlobalStyles\";\n\nconst App = () => {\n  return (\n    <Fragment>\n      <GlobalStyle />\n      <Header />\n      <Main />\n      <Footer />\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}